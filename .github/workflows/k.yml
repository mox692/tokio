name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses-dev bison flex libssl-dev libelf-dev bc curl jq qemu-system-x86 qemu-utils

      - name: Get latest kernel version
        id: kernel
        run: |
          KERNEL_VERSION=$(curl -s https://www.kernel.org/releases.json | jq -r '.latest_stable.version')
          echo "version=$KERNEL_VERSION" >> $GITHUB_OUTPUT

      - name: Download and extract kernel
        run: |
          MAJOR=$(echo ${{ steps.kernel.outputs.version }} | cut -d. -f1)
          wget https://cdn.kernel.org/pub/linux/kernel/v${MAJOR}.x/linux-${{ steps.kernel.outputs.version }}.tar.xz
          tar -xf linux-${{ steps.kernel.outputs.version }}.tar.xz

      - name: Build kernel
        run: |
          cd linux-${{ steps.kernel.outputs.version }}
          make defconfig
          make -j$(nproc)
          cd ..

      - name: Build Rust project
        run: |
          cargo build -p tokio --bin run_tests

      - name: Create initramfs
        run: |
          mkdir -p initramfs/bin
          cp target/debug/run_tests initramfs/bin/run_tests   # ← バイナリ名を合わせてください
          cat > initramfs/init << 'EOF'
          #!/bin/sh
          exec /bin/run_tests
          EOF
          chmod +x initramfs/init
          (cd initramfs && find . | cpio -H newc -o) > initramfs.cpio

      - name: Run on QEMU
        run: |
          qemu-system-x86_64 \
            -kernel linux-${{ steps.kernel.outputs.version }}/arch/x86/boot/bzImage \
            -initrd initramfs.cpio \
            -nographic \
            -append "console=ttyS0"
